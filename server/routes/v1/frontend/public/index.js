/* @flow */
import Router from 'koa-router';

import * as UserController from 'controllers/user';
import { AuthentificationError } from '@/errors';

const router = new Router();

/**
 * @swagger
 *  /front/login?idToken=3za47gre94zre7&accessToken=4gza2f98azg09ae034:
 *   post:
 *     description: Authenticate the user with Google
 *     tags:
 *       - users
 *     parameters:
 *       - in: query
 *         name: idToken
 *         schema:
 *           type: string
 *         description: The Google idToken generated by Google Login
 *       - in: query
 *         name: accessToken
 *         schema:
 *           type: string
 *         description:  The Google accessToken generated by Google Login
 *     produces:
 *       - application/json
 *     responses:
 *       200:
 *         description: An object containing the userConnected object
 *         schema:
 *           type: object
 *           properties:
 *             userConnected:
 *              schema:
 *              $ref: '#definitions/User'
 *             error:
 *              description: This will be present instead of userConnected if an usual error occured
 *       422:
 *         description: "Unprocessable Entity"
 *       500:
 *         description: "An unexpected error occured"
 */
router.post('/users/login', async (ctx, next) => {
  const authenticatedUser = await UserController.authenticate(ctx.query)
    .catch((error) => {
      if (error instanceof AuthentificationError) ctx.throw(401, error);
      ctx.throw(error);
    });

  ctx.body = authenticatedUser;
  next();
});

export default router;
